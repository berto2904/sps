-- MySQL Script generated by MySQL Workbench
-- Tue Oct 13 00:39:12 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sps
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sps` ;

-- -----------------------------------------------------
-- Schema sps
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sps` DEFAULT CHARACTER SET utf8 ;
USE `sps` ;

-- -----------------------------------------------------
-- Table `sps`.`domicilio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`domicilio` (
  `id_domicilio` INT NOT NULL AUTO_INCREMENT,
  `localidad` VARCHAR(45) NULL,
  `calle` VARCHAR(45) NULL,
  `numero` INT NULL,
  `piso` INT NULL,
  `departamento` VARCHAR(45) NULL,
  `gmap` VARCHAR(200) NULL,
  `telefono` VARCHAR(45) NULL,
  `referencia_util` VARCHAR(45) NULL,
  `codigo_postal` VARCHAR(45) NULL,
  `partido` VARCHAR(45) NULL,
  PRIMARY KEY (`id_domicilio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`tipo_vivienda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`tipo_vivienda` (
  `id_tipo_vivienda` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_tipo_vivienda`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`clasificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`clasificacion` (
  `id_clasificacion` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NULL,
  PRIMARY KEY (`id_clasificacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`vivienda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`vivienda` (
  `id_vivienda` INT NOT NULL AUTO_INCREMENT,
  `accesibilidad` VARCHAR(45) NULL,
  `propietario` VARCHAR(45) NULL,
  `inquilino` VARCHAR(45) NULL,
  `importe_alquiler` INT NULL,
  `ambientes` VARCHAR(3) NULL,
  `id_tipo_vivienda` INT NOT NULL,
  `aspecto_interior` INT NOT NULL,
  `aspecto_exterior` INT NOT NULL,
  PRIMARY KEY (`id_vivienda`),
  CONSTRAINT `fk_vivienda_tipo_vivienda1`
    FOREIGN KEY (`id_tipo_vivienda`)
    REFERENCES `sps`.`tipo_vivienda` (`id_tipo_vivienda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vivienda_clasificacion1`
    FOREIGN KEY (`aspecto_interior`)
    REFERENCES `sps`.`clasificacion` (`id_clasificacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vivienda_clasificacion2`
    FOREIGN KEY (`aspecto_exterior`)
    REFERENCES `sps`.`clasificacion` (`id_clasificacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`informacion_socioambiental`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`informacion_socioambiental` (
  `id_informacion_socioambiental` INT NOT NULL AUTO_INCREMENT,
  `id_domicilio` INT NULL,
  `id_vivienda` INT NULL,
  PRIMARY KEY (`id_informacion_socioambiental`),
  CONSTRAINT `fk_informacion_socioambiental_domicilio1`
    FOREIGN KEY (`id_domicilio`)
    REFERENCES `sps`.`domicilio` (`id_domicilio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_informacion_socioambiental_vivienda1`
    FOREIGN KEY (`id_vivienda`)
    REFERENCES `sps`.`vivienda` (`id_vivienda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 100;

-- -----------------------------------------------------
-- Table `sps`.`concepto_vecinal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`concepto_vecinal` (
  `id_concepto_vecinal` INT NOT NULL AUTO_INCREMENT,
  `nombre_apellido` VARCHAR(50) NULL,
  `afinidad` VARCHAR(50) NULL,
  `tipo_de_amistades` VARCHAR(50) NULL,
  `problemas_policiales` VARCHAR(50) NULL,
  `problemas_economicos` VARCHAR(50) NULL,
  `tiempo_que_conoce` VARCHAR(50) NULL,
  `domicilio` VARCHAR(50) NULL,
  `id_informacion_socioambiental` INT NOT NULL,
  `concepto_del_entrevistado` INT NOT NULL,
  PRIMARY KEY (`id_concepto_vecinal`),
  CONSTRAINT `fk_concepto_vecinal_informacion_socioambiental1`
    FOREIGN KEY (`id_informacion_socioambiental`)
    REFERENCES `sps`.`informacion_socioambiental` (`id_informacion_socioambiental`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_concepto_vecinal_clasificacion1`
    FOREIGN KEY (`concepto_del_entrevistado`)
    REFERENCES `sps`.`clasificacion` (`id_clasificacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`vehiculo_tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`vehiculo_tipo` (
  `id_vehiculo_tipo` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_vehiculo_tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`movilidad_propia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`movilidad_propia` (
  `id_movilidad_propia` INT NOT NULL AUTO_INCREMENT,
  `id_vehiculo_tipo` INT NOT NULL,
  `marca` VARCHAR(45) NULL,
  `modelo` VARCHAR(45) NULL,
  `anio` INT NULL,
  `titular` VARCHAR(45) NULL,
  `patente` VARCHAR(45) NULL,
  PRIMARY KEY (`id_movilidad_propia`),
  CONSTRAINT `fk_movilidad_propia_vehiculo_tipo1`
    FOREIGN KEY (`id_vehiculo_tipo`)
    REFERENCES `sps`.`vehiculo_tipo` (`id_vehiculo_tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`informacion_economica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`informacion_economica` (
  `id_informacion_economica` INT NOT NULL AUTO_INCREMENT,
  `id_movilidad_propia` INT NOT NULL,
  PRIMARY KEY (`id_informacion_economica`),
  CONSTRAINT `fk_informacion_economica_movilidad_propia1`
    FOREIGN KEY (`id_movilidad_propia`)
    REFERENCES `sps`.`movilidad_propia` (`id_movilidad_propia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`cuenta_bancaria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`cuenta_bancaria` (
  `id_cuenta_bancaria` INT NOT NULL AUTO_INCREMENT,
  `entidad` VARCHAR(45) NULL,
  `id_informacion_economica` INT NOT NULL,
  PRIMARY KEY (`id_cuenta_bancaria`),
  CONSTRAINT `fk_cuenta_bancaria_informacion_economica1`
    FOREIGN KEY (`id_informacion_economica`)
    REFERENCES `sps`.`informacion_economica` (`id_informacion_economica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`estado_civil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`estado_civil` (
  `id_estado_civil` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  `tipo` VARCHAR(45) NULL,
  PRIMARY KEY (`id_estado_civil`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`sexo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`sexo` (
  `id_sexo` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_sexo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`postulante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`postulante` (
  `id_postulante` INT NOT NULL AUTO_INCREMENT,
  `nombres` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `fecha_de_nacimiento` DATE NULL,
  `licencia_conductor` VARCHAR(45) NULL,
  `lugar_nacimiento` VARCHAR(45) NULL,
  `nacionalidad` VARCHAR(45) NULL,
  `dni` INT NULL,
  `licencia_categoria` VARCHAR(45) NULL,
  `expedida_por_B` VARCHAR(45) NULL,
  `id_estado_civil` INT NULL,
  `id_informacion_socioambiental` INT NULL,
  `id_informacion_economica` INT NULL,
  `id_sexo` INT NULL,
  `profesion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_postulante`),
  CONSTRAINT `fk_postulante_estado_civil1`
    FOREIGN KEY (`id_estado_civil`)
    REFERENCES `sps`.`estado_civil` (`id_estado_civil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_postulante_informacion_socioambiental1`
    FOREIGN KEY (`id_informacion_socioambiental`)
    REFERENCES `sps`.`informacion_socioambiental` (`id_informacion_socioambiental`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_postulante_informacion_economica1`
    FOREIGN KEY (`id_informacion_economica`)
    REFERENCES `sps`.`informacion_economica` (`id_informacion_economica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_postulante_sexo1`
    FOREIGN KEY (`id_sexo`)
    REFERENCES `sps`.`sexo` (`id_sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `id_sexo` INT NOT NULL,
  `e_mail` VARCHAR(45) NULL,
  `contrasenia` VARCHAR(45) NULL,
  `nombre_usuario` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  PRIMARY KEY (`id_usuario`),
  CONSTRAINT `fk_usuario_sexo1`
    FOREIGN KEY (`id_sexo`)
    REFERENCES `sps`.`sexo` (`id_sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`entrevista`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`entrevista` (
  `id_entrevista` INT NOT NULL AUTO_INCREMENT,
  `id_postulante` INT NOT NULL,
  `organizacion` VARCHAR(45) NULL,
  `puesto` VARCHAR(45) NULL,
  `fecha_hora` DATETIME NULL,
  `informacion_relevante` VARCHAR(100) NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_entrevista`, `id_postulante`),
  CONSTRAINT `fk_entrevista_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_entrevista_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `sps`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1;

-- -----------------------------------------------------
-- Table `sps`.`nivel_estudio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`nivel_estudio` (
  `id_nivel_estudio` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_nivel_estudio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`estudios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`estudios` (
  `id_estudios` INT NOT NULL AUTO_INCREMENT,
  `organizacion` VARCHAR(45) NULL,
  `id_postulante` INT NOT NULL,
  `id_nivel_estudio` INT NOT NULL,
  `titulo` VARCHAR(45) NULL,
  `desde` INT NULL,
  `hasta` INT NULL,
  `situacion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_estudios`),
  CONSTRAINT `fk_estudios_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_estudios_nivel_estudio1`
    FOREIGN KEY (`id_nivel_estudio`)
    REFERENCES `sps`.`nivel_estudio` (`id_nivel_estudio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`familiar_tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`familiar_tipo` (
  `id_familiar_tipo` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_familiar_tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`familiar_postulante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`familiar_postulante` (
  `id_familiar_postulante` INT NOT NULL AUTO_INCREMENT,
  `apellido_nombre` VARCHAR(45) NULL,
  `domicilio` VARCHAR(45) NULL,
  `profesion` VARCHAR(45) NULL,
  `id_postulante` INT NOT NULL,
  `id_familiar_tipo` INT NOT NULL,
  PRIMARY KEY (`id_familiar_postulante`),
  CONSTRAINT `fk_familiar_postulante_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_familiar_postulante_familiar_tipo1`
    FOREIGN KEY (`id_familiar_tipo`)
    REFERENCES `sps`.`familiar_tipo` (`id_familiar_tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`pregunta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`pregunta` (
  `id_pregunta` INT NOT NULL AUTO_INCREMENT,
  `pregunta` VARCHAR(250) NULL,
  `tipo` VARCHAR(45) NULL,
  PRIMARY KEY (`id_pregunta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`hobbies_pasatiempos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`hobbies_pasatiempos` (
  `id_postulante` INT NOT NULL,
  `id_pregunta` INT NOT NULL,
  `respuesta` VARCHAR(300) NULL,
  PRIMARY KEY (`id_postulante`, `id_pregunta`),
  CONSTRAINT `fk_hobbies_pasatiempos_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_hobbies_pasatiempos_pregunta1`
    FOREIGN KEY (`id_pregunta`)
    REFERENCES `sps`.`pregunta` (`id_pregunta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`idioma_tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`idioma_tipo` (
  `id_idioma_tipo` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_idioma_tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`clasificacion_idioma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`clasificacion_idioma` (
  `id_clasificacion_idioma` INT NOT NULL,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_clasificacion_idioma`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`idioma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`idioma` (
  `id_idioma` INT NOT NULL AUTO_INCREMENT,
  `id_postulante` INT NOT NULL,
  `id_idioma_tipo` INT NOT NULL,
  `lee` INT NOT NULL,
  `habla` INT NOT NULL,
  `escribe` INT NOT NULL,
  PRIMARY KEY (`id_idioma`, `id_postulante`, `id_idioma_tipo`),
  CONSTRAINT `fk_idioma_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_idioma_idioma_tipo1`
    FOREIGN KEY (`id_idioma_tipo`)
    REFERENCES `sps`.`idioma_tipo` (`id_idioma_tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_idioma_clasificacion_idioma1`
    FOREIGN KEY (`lee`)
    REFERENCES `sps`.`clasificacion_idioma` (`id_clasificacion_idioma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_idioma_clasificacion_idioma2`
    FOREIGN KEY (`habla`)
    REFERENCES `sps`.`clasificacion_idioma` (`id_clasificacion_idioma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_idioma_clasificacion_idioma3`
    FOREIGN KEY (`escribe`)
    REFERENCES `sps`.`clasificacion_idioma` (`id_clasificacion_idioma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '																	';

-- -----------------------------------------------------
-- Table `sps`.`informe_confidencial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`informe_confidencial` (
  `id_postulante` INT NOT NULL AUTO_INCREMENT,
  `id_pregunta` INT NOT NULL,
  `respuesta` VARCHAR(200) NULL,
  PRIMARY KEY (`id_postulante`),
  CONSTRAINT `fk_informe_confidencial_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_informe_confidencial_pregunta1`
    FOREIGN KEY (`id_pregunta`)
    REFERENCES `sps`.`pregunta` (`id_pregunta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`referencias_laborales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`referencias_laborales` (
  `id_referencias_laborales` INT NOT NULL AUTO_INCREMENT,
  `id_postulante` INT NOT NULL,
  `empresa` VARCHAR(45) NULL,
  `domicilio` VARCHAR(45) NULL,
  `desde` VARCHAR(45) NULL,
  `hasta` VARCHAR(45) NULL,
  PRIMARY KEY (`id_referencias_laborales`),
  CONSTRAINT `fk_referencias_laborales_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`informe_laboral`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`informe_laboral` (
  `id_informe_laboral` INT NOT NULL AUTO_INCREMENT,
  `id_referencias_laborales` INT NOT NULL,
  `puesto_al_ingresar` VARCHAR(45) NULL DEFAULT '',
  `ultimo_puesto_ocupado` VARCHAR(45) NULL DEFAULT '',
  `causa_de_egreso` VARCHAR(45) NULL DEFAULT '',
  `asistencia` VARCHAR(45) NULL DEFAULT '',
  `puntualidad` VARCHAR(45) NULL DEFAULT '',
  `concepto_general` VARCHAR(45) NULL DEFAULT '',
  PRIMARY KEY (`id_informe_laboral`),
  CONSTRAINT `fk_informe_laboral_referencias_laborales1`
    FOREIGN KEY (`id_referencias_laborales`)
    REFERENCES `sps`.`referencias_laborales` (`id_referencias_laborales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`informe_laboral_pregunta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`informe_laboral_pregunta` (
  `id_informe_laboral` INT NOT NULL,
  `id_pregunta_laboral` INT NOT NULL,
  `respuesta` VARCHAR(200) NULL,
  PRIMARY KEY (`id_informe_laboral`, `id_pregunta_laboral`),
  CONSTRAINT `fk_informe_laboral_pregunta_informe_laboral1`
    FOREIGN KEY (`id_informe_laboral`)
    REFERENCES `sps`.`informe_laboral` (`id_informe_laboral`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_informe_laboral_pregunta_pregunta1`
    FOREIGN KEY (`id_pregunta_laboral`)
    REFERENCES `sps`.`pregunta` (`id_pregunta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`observaciones_convivencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`observaciones_convivencia` (
  `id_observaciones_convivencia` INT NOT NULL AUTO_INCREMENT,
  `observacion` VARCHAR(300) NULL,
  `id_postulante` INT NOT NULL,
  PRIMARY KEY (`id_observaciones_convivencia`),
  CONSTRAINT `fk_observaciones_convivencia_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`observaciones_infolaboral`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`observaciones_infolaboral` (
  `id_observaciones_infolaboral` INT NOT NULL AUTO_INCREMENT,
  `observacion` VARCHAR(300) NULL,
  `id_postulante` INT NOT NULL,
  PRIMARY KEY (`id_observaciones_infolaboral`),
  CONSTRAINT `fk_observaciones_infolaboral_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`tarjeta_credito_debito`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`tarjeta_credito_debito` (
  `id_tarjeta_credito_debito` INT NOT NULL AUTO_INCREMENT,
  `id_informacion_economica` INT NOT NULL,
  `otras_propiedades` VARCHAR(45) NULL,
  `seguro_de_vida` VARCHAR(45) NULL,
  `prendas` VARCHAR(45) NULL,
  `observaciones` VARCHAR(100) NULL,
  PRIMARY KEY (`id_tarjeta_credito_debito`),
  CONSTRAINT `fk_tarjeta_credito_debito_informacion_economica1`
    FOREIGN KEY (`id_informacion_economica`)
    REFERENCES `sps`.`informacion_economica` (`id_informacion_economica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`tarjeta_entidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`tarjeta_entidad` (
  `id_tarjeta_entidad` INT NOT NULL AUTO_INCREMENT,
  `id_tarjeta_credito_debito` INT NOT NULL,
  `tarjeta` VARCHAR(45) NULL,
  `entidad` VARCHAR(45) NULL,
  PRIMARY KEY (`id_tarjeta_entidad`),
  CONSTRAINT `fk_tarjeta_entidad_tarjeta_credito_debito1`
    FOREIGN KEY (`id_tarjeta_credito_debito`)
    REFERENCES `sps`.`tarjeta_credito_debito` (`id_tarjeta_credito_debito`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`transporte_tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`transporte_tipo` (
  `id_transporte_tipo` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_transporte_tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`transporte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`transporte` (
  `id_transporte` INT NOT NULL AUTO_INCREMENT,
  `cuadras` VARCHAR(45) NULL,
  `id_transporte_tipo` INT NOT NULL,
  `id_domicilio` INT NOT NULL,
  PRIMARY KEY (`id_transporte`),
  CONSTRAINT `fk_transporte_transporte_tipo1`
    FOREIGN KEY (`id_transporte_tipo`)
    REFERENCES `sps`.`transporte_tipo` (`id_transporte_tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transporte_domicilio1`
    FOREIGN KEY (`id_domicilio`)
    REFERENCES `sps`.`domicilio` (`id_domicilio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`servicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`servicio` (
  `id_servicio` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_servicio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sps`.`conyuge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`conyuge` (
  `id_conyuge` INT NOT NULL AUTO_INCREMENT,
  `id_postulante` INT NOT NULL,
  `apellido` VARCHAR(45) NULL,
  `nombres` VARCHAR(45) NULL,
  `id_sexo` INT NOT NULL,
  `fecha_nacimiento` DATE NULL,
  `dni` INT NULL,
  `lugar_nacimiento` VARCHAR(45) NULL,
  `nacionalidad` VARCHAR(45) NULL,
  `profesion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_conyuge`, `id_postulante`),
  CONSTRAINT `fk_conyuge_sexo1`
    FOREIGN KEY (`id_sexo`)
    REFERENCES `sps`.`sexo` (`id_sexo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_conyuge_postulante1`
    FOREIGN KEY (`id_postulante`)
    REFERENCES `sps`.`postulante` (`id_postulante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `sps`.`vivienda_servicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sps`.`vivienda_servicio` (
  `id_servicio` INT NOT NULL,
  `id_vivienda` INT NOT NULL,
  PRIMARY KEY (`id_servicio`, `id_vivienda`),
  CONSTRAINT `fk_servicio_has_vivienda_servicio1`
    FOREIGN KEY (`id_servicio`)
    REFERENCES `sps`.`servicio` (`id_servicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_servicio_has_vivienda_vivienda1`
    FOREIGN KEY (`id_vivienda`)
    REFERENCES `sps`.`vivienda` (`id_vivienda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- procedure SPeliminarEntrevista
-- -----------------------------------------------------

DELIMITER $$
USE `sps`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SPeliminarEntrevista`(
		idEntrevista int
)
BEGIN
	DECLARE _id_entrevista int;
	DECLARE _id_postulante int;
	DECLARE _id_conyuge int;
	DECLARE _id_informacion_socioambiental int;
	DECLARE _id_domicilio int;
	DECLARE _id_vivienda int;
	DECLARE _id_informacion_economica int;
	DECLARE _id_movilidad_propia int;
    
SELECT
      entrevista.id_entrevista                                id_entrevista,
      postulante.id_postulante                                id_postulante,
      postulante.id_informacion_socioambiental                id_informacion_socioambiental,
      informacion_socioambiental.id_domicilio                 id_domicilio,
      informacion_socioambiental.id_vivienda                  id_vivienda,
      postulante.id_informacion_economica                     id_informacion_economica,
      informacion_economica.id_movilidad_propia               id_movilidad_propia,
      conyuge.id_conyuge									  id_conyuge
      INTO  _id_entrevista, 
            _id_postulante, 
            _id_informacion_socioambiental, 
            _id_domicilio, 
            _id_vivienda, 
            _id_informacion_economica, 
            _id_movilidad_propia,
            _id_conyuge
FROM entrevista
left join postulante on entrevista.id_postulante  = postulante.id_postulante
left join conyuge on conyuge.id_postulante = postulante.id_postulante
left join informacion_economica on informacion_economica.id_informacion_economica = postulante.id_informacion_economica
left join informacion_socioambiental on informacion_socioambiental.id_informacion_socioambiental = postulante.id_informacion_socioambiental
left join movilidad_propia on movilidad_propia.id_movilidad_propia = informacion_economica.id_movilidad_propia
left join tarjeta_credito_debito on tarjeta_credito_debito.id_informacion_economica = postulante.id_informacion_economica
left join vivienda on vivienda.id_vivienda = informacion_socioambiental.id_vivienda
left join observaciones_convivencia on observaciones_convivencia.id_postulante = postulante.id_postulante
where entrevista.id_entrevista = idEntrevista ;


DELETE FROM conyuge where id_postulante = _id_postulante;
DELETE FROM familiar_postulante where id_postulante = _id_postulante;
DELETE FROM estudios where id_postulante = _id_postulante;
DELETE FROM hobbies_pasatiempos where id_postulante = _id_postulante;
DELETE FROM cuenta_bancaria where id_informacion_economica = _id_informacion_economica;
DELETE FROM observaciones_infolaboral where id_postulante = _id_postulante;    
DELETE FROM idioma where id_postulante = _id_postulante;    
DELETE FROM observaciones_convivencia where id_postulante = _id_postulante;

DELETE FROM informe_laboral_pregunta where id_informe_laboral in (
		SELECT id_informe_laboral FROM informe_laboral where id_referencias_laborales in (
			SELECT id_referencias_laborales FROM referencias_laborales where id_postulante = _id_postulante));

DELETE FROM informe_laboral where id_referencias_laborales in (
		SELECT id_referencias_laborales FROM referencias_laborales where id_postulante = _id_postulante);
        
DELETE FROM referencias_laborales where id_postulante = _id_postulante;
DELETE FROM entrevista where id_entrevista = _id_entrevista;    
DELETE FROM postulante where id_postulante = _id_postulante;
DELETE FROM tarjeta_entidad where id_tarjeta_credito_debito in (SELECT id_tarjeta_credito_debito from tarjeta_credito_debito where id_informacion_economica = _id_informacion_economica );  
DELETE FROM tarjeta_credito_debito where id_informacion_economica = _id_informacion_economica;  
DELETE FROM informacion_economica where id_informacion_economica = _id_informacion_economica;
DELETE FROM movilidad_propia where id_movilidad_propia = _id_movilidad_propia;   
DELETE FROM informacion_socioambiental where id_informacion_socioambiental = _id_informacion_socioambiental;
DELETE FROM vivienda_servicio where id_vivienda = _id_vivienda;
DELETE FROM vivienda where id_vivienda = _id_vivienda;
DELETE FROM transporte where id_domicilio = _id_domicilio;
DELETE FROM domicilio where id_domicilio = _id_domicilio;

ALTER TABLE entrevista AUTO_INCREMENT = 1;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SPVerTodo
-- -----------------------------------------------------

DELIMITER $$
USE `sps`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SPVerTodo`(
	idEntrevista int
)
BEGIN
DECLARE _id_entrevista int;
	DECLARE _id_postulante int;
	DECLARE _id_conyuge int;
	DECLARE _id_informacion_socioambiental int;
	DECLARE _id_domicilio int;
	DECLARE _id_vivienda int;
	DECLARE _id_informacion_economica int;
	DECLARE _id_movilidad_propia int;
    
SELECT
      entrevista.id_entrevista                                id_entrevista,
      postulante.id_postulante                                id_postulante,
      postulante.id_informacion_socioambiental                id_informacion_socioambiental,
      informacion_socioambiental.id_domicilio                 id_domicilio,
      informacion_socioambiental.id_vivienda                  id_vivienda,
      postulante.id_informacion_economica                     id_informacion_economica,
      informacion_economica.id_movilidad_propia               id_movilidad_propia,
      conyuge.id_conyuge									  id_conyuge
      INTO  _id_entrevista, 
            _id_postulante, 
            _id_informacion_socioambiental, 
            _id_domicilio, 
            _id_vivienda, 
            _id_informacion_economica, 
            _id_movilidad_propia,
            _id_conyuge
FROM entrevista
left join postulante on entrevista.id_postulante  = postulante.id_postulante
left join conyuge on conyuge.id_postulante = postulante.id_postulante
left join informacion_economica on informacion_economica.id_informacion_economica = postulante.id_informacion_economica
left join informacion_socioambiental on informacion_socioambiental.id_informacion_socioambiental = postulante.id_informacion_socioambiental
left join movilidad_propia on movilidad_propia.id_movilidad_propia = informacion_economica.id_movilidad_propia
left join tarjeta_credito_debito on tarjeta_credito_debito.id_informacion_economica = postulante.id_informacion_economica
left join vivienda on vivienda.id_vivienda = informacion_socioambiental.id_vivienda
left join observaciones_convivencia on observaciones_convivencia.id_postulante = postulante.id_postulante
where entrevista.id_entrevista = idEntrevista ;

SELECT _id_entrevista AS "_id_entrevista";
SELECT _id_postulante AS "_id_postulante";
SELECT _id_conyuge AS "_id_conyuge";
SELECT _id_informacion_socioambiental AS "_id_informacion_socioambiental";
SELECT _id_domicilio AS "_id_domicilio";
SELECT _id_vivienda AS "_id_vivienda";
SELECT _id_informacion_economica AS "_id_informacion_economica";
SELECT _id_movilidad_propia AS "_id_movilidad_propia";

END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `sps`.`tipo_vivienda`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`tipo_vivienda` (`id_tipo_vivienda`, `descripcion`) VALUES (1, 'Material');
INSERT INTO `sps`.`tipo_vivienda` (`id_tipo_vivienda`, `descripcion`) VALUES (2, 'Prefabricada');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`clasificacion`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`clasificacion` (`id_clasificacion`, `descripcion`) VALUES (1, 'Muy Bueno');
INSERT INTO `sps`.`clasificacion` (`id_clasificacion`, `descripcion`) VALUES (2, 'Bueno');
INSERT INTO `sps`.`clasificacion` (`id_clasificacion`, `descripcion`) VALUES (3, 'Regular');
INSERT INTO `sps`.`clasificacion` (`id_clasificacion`, `descripcion`) VALUES (4, 'Malo');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`vehiculo_tipo`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`vehiculo_tipo` (`id_vehiculo_tipo`, `descripcion`) VALUES (1, 'Automovil');
INSERT INTO `sps`.`vehiculo_tipo` (`id_vehiculo_tipo`, `descripcion`) VALUES (2, 'Moto');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`estado_civil`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`estado_civil` (`id_estado_civil`, `descripcion`, `tipo`) VALUES (1, 'Soltero/a', NULL);
INSERT INTO `sps`.`estado_civil` (`id_estado_civil`, `descripcion`, `tipo`) VALUES (3, 'Casado/a', NULL);
INSERT INTO `sps`.`estado_civil` (`id_estado_civil`, `descripcion`, `tipo`) VALUES (5, 'Concubino/a', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`sexo`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`sexo` (`id_sexo`, `descripcion`) VALUES (1, 'Masculino');
INSERT INTO `sps`.`sexo` (`id_sexo`, `descripcion`) VALUES (2, 'Femenino');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`usuario`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`usuario` (`id_usuario`, `nombre`, `id_sexo`, `e_mail`, `contrasenia`, `nombre_usuario`, `apellido`) VALUES (1, 'pablo', 1, 'berto', '1234', 'berto', 'berto');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`nivel_estudio`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`nivel_estudio` (`id_nivel_estudio`, `descripcion`) VALUES (1, 'Primario');
INSERT INTO `sps`.`nivel_estudio` (`id_nivel_estudio`, `descripcion`) VALUES (2, 'Secundario');
INSERT INTO `sps`.`nivel_estudio` (`id_nivel_estudio`, `descripcion`) VALUES (3, 'Terciario');
INSERT INTO `sps`.`nivel_estudio` (`id_nivel_estudio`, `descripcion`) VALUES (4, 'Universitario');
INSERT INTO `sps`.`nivel_estudio` (`id_nivel_estudio`, `descripcion`) VALUES (5, 'Otros');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`familiar_tipo`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`familiar_tipo` (`id_familiar_tipo`, `descripcion`) VALUES (1, 'Padre');
INSERT INTO `sps`.`familiar_tipo` (`id_familiar_tipo`, `descripcion`) VALUES (2, 'Madre');
INSERT INTO `sps`.`familiar_tipo` (`id_familiar_tipo`, `descripcion`) VALUES (3, 'Hijo');
INSERT INTO `sps`.`familiar_tipo` (`id_familiar_tipo`, `descripcion`) VALUES (4, 'Hija');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`pregunta`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`pregunta` (`id_pregunta`, `pregunta`, `tipo`) VALUES (1, 'Pregunta hp', 'hp');
INSERT INTO `sps`.`pregunta` (`id_pregunta`, `pregunta`, `tipo`) VALUES (2, 'Pregunta ic', 'ic');
INSERT INTO `sps`.`pregunta` (`id_pregunta`, `pregunta`, `tipo`) VALUES (3, 'Pregunta pl', 'pl');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`idioma_tipo`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`idioma_tipo` (`id_idioma_tipo`, `descripcion`) VALUES (1, 'Ingles');
INSERT INTO `sps`.`idioma_tipo` (`id_idioma_tipo`, `descripcion`) VALUES (2, 'Portugues');
INSERT INTO `sps`.`idioma_tipo` (`id_idioma_tipo`, `descripcion`) VALUES (3, 'Frances');
INSERT INTO `sps`.`idioma_tipo` (`id_idioma_tipo`, `descripcion`) VALUES (4, 'Otros');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`clasificacion_idioma`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`clasificacion_idioma` (`id_clasificacion_idioma`, `descripcion`) VALUES (1, 'Bien');
INSERT INTO `sps`.`clasificacion_idioma` (`id_clasificacion_idioma`, `descripcion`) VALUES (2, 'Regular');
INSERT INTO `sps`.`clasificacion_idioma` (`id_clasificacion_idioma`, `descripcion`) VALUES (3, 'Muy Bien');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`transporte_tipo`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`transporte_tipo` (`id_transporte_tipo`, `descripcion`) VALUES (1, 'Colectivo');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sps`.`servicio`
-- -----------------------------------------------------
START TRANSACTION;
USE `sps`;
INSERT INTO `sps`.`servicio` (`id_servicio`, `descripcion`) VALUES (1, 'Luz');
INSERT INTO `sps`.`servicio` (`id_servicio`, `descripcion`) VALUES (2, 'Gas');
INSERT INTO `sps`.`servicio` (`id_servicio`, `descripcion`) VALUES (3, 'Agua Corriente');
INSERT INTO `sps`.`servicio` (`id_servicio`, `descripcion`) VALUES (4, 'Telefono');
INSERT INTO `sps`.`servicio` (`id_servicio`, `descripcion`) VALUES (5, 'TV por Cable');
INSERT INTO `sps`.`servicio` (`id_servicio`, `descripcion`) VALUES (6, 'Cloacas');
INSERT INTO `sps`.`servicio` (`id_servicio`, `descripcion`) VALUES (7, 'Pavimento');
INSERT INTO `sps`.`servicio` (`id_servicio`, `descripcion`) VALUES (8, 'Vigilancia Privada');

COMMIT;

